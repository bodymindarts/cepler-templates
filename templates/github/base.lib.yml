#@ load("ytt.lib.yml", "ytt_processor")
#@ load("kapp.lib.yml", "kapp_task")
#@ load("@ytt:json", "json")

#@ def job(environment_name, config_path, driver, executor, processor):
runs-on: ubuntu-latest
steps:
  - uses: actions/checkout@v2
    with:
      ref: #@ driver["repo"]["branch"]
      fetch-depth: 0
      persist-credentials: false
  - id: prepare-cepler
    uses: bodymindarts/cepler-action@main
    with:
      config_path: #@ config_path
      environment: #@ environment_name
      prepare: true
  - if: ${{ steps.prepare-cepler.outputs.needs_deploying == 'true' }}
    uses: k14s/setup-k14s-action@v1
    with:
      only: ytt, kapp
#@ if driver["secrets"]:
  - if: ${{ steps.prepare-cepler.outputs.needs_deploying == 'true' }}
    name: render-secrets
    env:
      SECRETS: #@ json.encode(driver["secrets"])
    run: |
      cat <<EOF > secrets.yml
      #@data/values
      #@ load("@ytt:overlay", "overlay")
      #@overlay/match-child-defaults missing_ok=True
      ---
      ${SECRETS}
      EOF
#@ end
#@ if/end processor["type"] == "ytt":
  - #@ ytt_processor(processor, driver["secrets"])
#@ if processor["debug"]:
  - if: ${{ steps.prepare-cepler.outputs.needs_deploying == 'true' }}
    run: cat rendered.yml
#@ end
#@ if/end executor["type"] == "kapp":
  - #@ kapp_task(environment_name, executor)
  - if: #@ "${{ steps.deploy-" + environment_name + ".conclusion  == 'Success' }}"
    name: cepler record
    uses: bodymindarts/cepler-action@main
    with:
      config_path: #@ config_path
      environment: #@ environment_name
      record: true
  - if: #@ "${{ steps.deploy-" + environment_name + ".conclusion  == 'Success' }}"
    name: Push changes
    uses: ad-m/github-push-action@master
    with:
      github_token: #@ driver["repo"]["access_token"]
      branch: #@ driver["repo"]["branch"]
#@ end

#@ def jobs(environments, config_path, driver, executor, processor):
#@   jobs = {}
#@   for name in environments:
#@     jobs.update([("deploy-" + name, job(name, config_path, driver, executor, processor))])
#@   end
#@   return jobs
#@ end

#@ def github(ci, cepler):
name: cepler-deploy
"on": [push]
jobs: #@ jobs(cepler["environments"], ci["cepler"]["config"], ci["driver"], ci["executor"], ci["processor"])

#@ end
