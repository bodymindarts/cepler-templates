#@ load("@ytt:struct", "struct")

#@ def kapp_cmd(config_dir, app_name):
#@   return "ytt -f " + config_dir + " | kapp -y -f - -a " + app_name
#@ end

#@ def kapp_kubeconfig(env_name, namespace, token, ca_cert, server):
apiVersion: v1
kind: Config
preferences: {}
clusters:
- name: #@ env_name
  cluster:
    certificate-authoriy-data: #@ ca_cert
    server: #@ server
users:
- name: #@ env_name + "-user"
  user:
    token: #@ token
contexts:
- name: #@ env_name
  context:
    cluster: #@ env_name
    user: #@ env_name + "-user"
    namespace: #@ namespace
current-context: #@ env_name
#@ end

#@ def kapp_task(input, kapp_config):
task: execute
config:
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: k14s/image
      tag: kbld-rand-1592942790507001000-1148625018150
  inputs:
  - name: #@ input
    path: repo
  outputs:
  - name: repo
  params:
    #@ env = struct.decode(kapp_config)[input]
    KAPP_KUBECONFIG_YAML: #@ kapp_kubeconfig(input, env["namespace"], env["token"], env["ca_cert"], env["server"])
  run:
    dir: repo
    path: sh
    args:
    - "-c"
    - #@ kapp_cmd(kapp_config.config_dir, env["app_name"])
#@ end
